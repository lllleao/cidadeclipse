{"version":3,"sources":["bundle.js","../../source/scripts/animationType.js","../../source/scripts/carrossel.js","../../source/main.js","../../source/scripts/menuBurguer.js","../../source/scripts/store.js"],"names":["carrosselAnimation","carrousselItems","document","querySelectorAll","widthLib","querySelector","elementWidth","clientWidth","ResizeObserver","e","borderBoxSize","inlineSize","forEach","item","style","cssText","index","addEventListener","event","element","currentTarget","state","indexCurrent","removeEventListener","onMouseMove","onMouseUp","startPoint","targetTouches","clientX","currentPoint","positionSaved","positionSavedBefore","touchMoves","observe","test","moviment","positionSavedAfter","positionSavedTotal","loop","concat","transition","positionSavedTota","setTranslate","position","menuBurguer","menuModal","heightSome","classList","toggle","setTimeout","text","innerHTML","count","interval","setInterval","add","clearInterval","IntersectionObserver","entries","entry","isIntersecting","remove"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function () {\n    'use strict';\n\n    var animationType = function animationType() {\n      setTimeout(function () {\n        var element = document.querySelector('.hero__description__subtitle');\n        var text = 'uma cooperativa de artistas emergentes';\n        element.innerHTML = '';\n        var count = 0;\n        var interval = setInterval(function () {\n          element.classList.add('hero__description__subtitle--visible');\n          element.innerHTML += text[count];\n          count++;\n          if (count === text.length) {\n            clearInterval(interval);\n          }\n        }, 90);\n      }, 3000);\n    };\n\n    var carrosselAnimation = function carrosselAnimation() {\n      var carrousselItems = document.querySelectorAll('.carroussel a');\n      var widthLib = document.querySelector('.public-lb');\n      var elementWidth = carrousselItems[0].clientWidth;\n      var widthLibResize = new ResizeObserver(function (e) {\n        elementWidth = carrousselItems[0].clientWidth;\n        var currentWidth = e[0].borderBoxSize[0].inlineSize;\n        if (currentWidth > 706) {\n          carrousselItems.forEach(function (item) {\n            item.style.cssText = \"transform: none;\";\n          });\n        } else {\n          carrousselItems.forEach(function (item, index) {\n            item.addEventListener('touchstart', function (event) {\n              touchMoves(event, index);\n            });\n          });\n        }\n      });\n      widthLibResize.observe(widthLib);\n      var state = {\n        startPoint: 0,\n        positionSaved: 0,\n        currentPoint: 0,\n        moviment: 0,\n        indexCurrent: 0,\n        positionSavedBefore: 0,\n        positionSavedAfter: 0,\n        positionSavedTotal: 0\n      };\n      var test;\n      carrousselItems.forEach(function (item) {\n        item.addEventListener('transitionend', function (e) {\n          loop(e.currentTarget, test);\n        });\n      });\n      var loop = function loop(e, test) {\n        if (test) {\n          e.style.cssText = \"transform: translateX(\".concat(0, \"px);\");\n          e.style.transition = 'none';\n          state.startPoint = 0;\n          state.positionSaved = 0;\n          state.currentPoint = 0;\n          state.moviment = 0;\n          state.indexCurrent = 0;\n          state.positionSavedBefore = 0;\n          state.positionSavedAfter = 0;\n          state.positionSavedTota = 0;\n        }\n      };\n      var setTranslate = function setTranslate(position) {\n        carrousselItems.forEach(function (item) {\n          item.style.cssText = \"transform: translateX(\".concat(position, \"px);\");\n          item.style.transition = \"transform 0.3s\";\n        });\n        state.positionSaved = position;\n      };\n      function touchMoves(e, index) {\n        var element = e.currentTarget;\n        state.indexCurrent = index;\n        if (index === 9 || index === 1) {\n          element.removeEventListener('touchmove', onMouseMove);\n          element.removeEventListener('touchend', onMouseUp);\n        } else {\n          state.startPoint = e.targetTouches[0].clientX;\n          state.currentPoint = state.startPoint - state.positionSaved;\n          state.positionSavedBefore = state.positionSaved;\n          element.removeEventListener('touchend', onMouseUp);\n          element.addEventListener('touchmove', onMouseMove);\n        }\n      }\n      function onMouseMove(e) {\n        state.moviment = e.targetTouches[0].clientX - state.currentPoint;\n        state.positionSaved = state.moviment;\n        carrousselItems.forEach(function (item) {\n          item.style.cssText = \"transform: translateX(\".concat(state.moviment, \"px);\");\n          item.addEventListener('touchend', onMouseUp);\n        });\n      }\n      function onMouseUp() {\n        state.positionSavedAfter = state.moviment;\n        state.positionSavedTotal = state.positionSavedAfter - state.positionSavedBefore;\n        if (state.positionSavedTotal < -100) {\n          var position = (state.indexCurrent - 4) * (elementWidth + 16);\n          setTranslate(-position);\n        } else if (state.positionSavedTotal > 100) {\n          var _position = (state.indexCurrent - 6) * (elementWidth + 16);\n          setTranslate(-_position);\n        } else {\n          var _position2 = (state.indexCurrent - 5) * (elementWidth + 16);\n          setTranslate(-_position2);\n        }\n        test = state.positionSaved === -((elementWidth + 16) * 4) || state.positionSaved === (elementWidth + 16) * 4;\n      }\n    };\n\n    var menuHamb = function menuHamb() {\n      var menuBurguer = document.querySelector('.hamburguer-wrapper');\n      var menuModal = document.querySelector('.menu-mob');\n      menuBurguer.addEventListener('click', function () {\n        menuBurguer.classList.toggle('hamburguer-wrapper__is-active-menu');\n        menuModal.classList.toggle('menu-mob__is-active-menu');\n      });\n    };\n\n    var animationStore = function animationStore() {\n      var heightSome = document.querySelector('.store');\n      var purchaseObserver = new IntersectionObserver(function (entries) {\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            heightSome.classList.add('store-is-active');\n          } else {\n            heightSome.classList.remove('store-is-active');\n          }\n        });\n      });\n      purchaseObserver.observe(heightSome);\n    };\n\n    document.addEventListener('DOMContentLoaded', function () {\n      menuHamb();\n      animationType();\n      carrosselAnimation();\n      animationStore();\n    });\n\n})();\n//# sourceMappingURL=bundle.js.map\n","const animationType = () => {\r\n    setTimeout(() => {\r\n        const element = document.querySelector('.hero__description__subtitle')\r\n        const text = 'uma cooperativa de artistas emergentes'\r\n        element.innerHTML = ''\r\n        let count = 0\r\n    \r\n        const interval = setInterval(() => {\r\n            element.classList.add('hero__description__subtitle--visible')\r\n            element.innerHTML += text[count]\r\n            count++\r\n            \r\n            if (count === text.length) {\r\n                clearInterval(interval)\r\n            }\r\n        }, 90)\r\n    }, 3000)\r\n}\r\n\r\nexport default animationType\r\n","const carrosselAnimation = () => {\r\n    const carrousselItems = document.querySelectorAll('.carroussel a')\r\n    const widthLib = document.querySelector('.public-lb')\r\n    let elementWidth = carrousselItems[0].clientWidth\r\n\r\n    const widthLibResize = new ResizeObserver((e) => {\r\n        elementWidth = carrousselItems[0].clientWidth\r\n        const currentWidth = e[0].borderBoxSize[0].inlineSize\r\n        if (currentWidth > 706) {\r\n            carrousselItems.forEach(item => {\r\n                item.style.cssText = `transform: none;`\r\n\r\n\r\n\r\n            })\r\n        } else {\r\n            carrousselItems.forEach((item, index) => {\r\n                item.addEventListener('touchstart', function (event) {\r\n                    touchMoves(event, index)\r\n                })\r\n            })\r\n        }\r\n    })\r\n\r\n    widthLibResize.observe(widthLib)\r\n    const state = {\r\n        startPoint: 0,\r\n        positionSaved: 0,\r\n        currentPoint: 0,\r\n        moviment: 0,\r\n        indexCurrent: 0,\r\n        positionSavedBefore: 0,\r\n        positionSavedAfter: 0,\r\n        positionSavedTotal: 0,\r\n    }\r\n    let test\r\n\r\n    carrousselItems.forEach(item => {\r\n        item.addEventListener('transitionend', (e) => {\r\n            loop(e.currentTarget, test)\r\n        })\r\n    })\r\n\r\n    const loop = (e, test) => {\r\n        if (test) {\r\n            e.style.cssText = `transform: translateX(${0}px);`\r\n            e.style.transition = 'none'\r\n\r\n            state.startPoint = 0\r\n            state.positionSaved = 0\r\n            state.currentPoint = 0\r\n            state.moviment = 0\r\n            state.indexCurrent = 0\r\n            state.positionSavedBefore = 0\r\n            state.positionSavedAfter = 0\r\n            state.positionSavedTota = 0\r\n        }\r\n    }\r\n\r\n    const setTranslate = (position) => {\r\n\r\n        carrousselItems.forEach(item => {\r\n            item.style.cssText = `transform: translateX(${position}px);`\r\n            item.style.transition = `transform 0.3s`\r\n        })\r\n        state.positionSaved = position\r\n    }\r\n\r\n    function touchMoves(e, index) {\r\n        const element = e.currentTarget\r\n        state.indexCurrent = index\r\n        if (index === 9 || index === 1) {\r\n            element.removeEventListener('touchmove', onMouseMove)\r\n            element.removeEventListener('touchend', onMouseUp)\r\n        } else {\r\n            state.startPoint = e.targetTouches[0].clientX\r\n            state.currentPoint = state.startPoint - state.positionSaved\r\n            state.positionSavedBefore = state.positionSaved\r\n            \r\n            element.removeEventListener('touchend', onMouseUp)\r\n            element.addEventListener('touchmove', onMouseMove)\r\n        }\r\n    }\r\n\r\n    function onMouseMove(e) {\r\n        state.moviment = e.targetTouches[0].clientX - state.currentPoint\r\n        state.positionSaved = state.moviment\r\n        carrousselItems.forEach(item => {\r\n            item.style.cssText = `transform: translateX(${state.moviment}px);`\r\n            item.addEventListener('touchend', onMouseUp)\r\n        })\r\n    }\r\n\r\n\r\n    function onMouseUp() {\r\n        state.positionSavedAfter = state.moviment\r\n        state.positionSavedTotal = state.positionSavedAfter - state.positionSavedBefore\r\n\r\n        if (state.positionSavedTotal < -100) {\r\n            const position = (state.indexCurrent - 4) * (elementWidth + 16)\r\n            setTranslate(-position)\r\n\r\n        } else if (state.positionSavedTotal > 100) {\r\n            const position = (state.indexCurrent - 6) * (elementWidth + 16)\r\n\r\n            setTranslate(-position)\r\n\r\n        } else {\r\n            const position = (state.indexCurrent - 5) * (elementWidth + 16)\r\n            setTranslate(-position)\r\n        }\r\n\r\n        test = state.positionSaved === -((elementWidth + 16) * 4) || state.positionSaved === ((elementWidth + 16) * 4)\r\n    }\r\n}\r\n\r\nexport default carrosselAnimation\r\n","import animationType from './scripts/animationType'\r\nimport carrosselAnimation from './scripts/carrossel'\r\nimport menuHamb from './scripts/menuBurguer'\r\nimport animationStore from './scripts/store'\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    menuHamb()\r\n    animationType()\r\n    carrosselAnimation()\r\n    animationStore()\r\n})","const menuHamb = () => {\r\n    const menuBurguer = document.querySelector('.hamburguer-wrapper')\r\n    const menuModal = document.querySelector('.menu-mob')\r\n\r\n    menuBurguer.addEventListener('click', () => {\r\n        menuBurguer.classList.toggle('hamburguer-wrapper__is-active-menu')\r\n        menuModal.classList.toggle('menu-mob__is-active-menu')\r\n    })\r\n}\r\n\r\nexport default menuHamb\r\n","const animationStore = () => {\r\n    const heightSome = document.querySelector('.store')\r\n    \r\n    const purchaseObserver = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                heightSome.classList.add('store-is-active')\r\n            } else {\r\n                heightSome.classList.remove('store-is-active')\r\n            }\r\n        })\r\n    })\r\n\r\n    purchaseObserver.observe(heightSome)\r\n}\r\n\r\nexport default animationStore\r\n"]}